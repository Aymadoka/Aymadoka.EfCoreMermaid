// <auto-generated />
using System;
using Erp.Mdm.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Erp.Mdm.Migrations
{
    [DbContext(typeof(MdmDbContext))]
    partial class MdmDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Abp.Application.Editions.Edition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.HasKey("Id");

                    b.ToTable("Abp_Editions");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Edition");
                });

            modelBuilder.Entity("Erp.Mdm.PartnerDefiners.Aggregates.PartnerSubscription", b =>
                {
                    b.HasOne("Erp.Mdm.PartnerDefiners.Aggregates.Partner")
                        .WithMany("Subscriptions")
                        .HasForeignKey("PartnerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Erp.Mdm.StandardDefiners.Aggregates.StandardProperty", b =>
                {
                    b.HasOne("Erp.Mdm.StandardDefiners.Aggregates.StandardObject")
                        .WithMany("Properties")
                        .HasForeignKey("ObjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Erp.Mdm.StandardMapperDefiners.Aggregates.StandardMapperDetail", b =>
                {
                    b.HasOne("Erp.Mdm.StandardMapperDefiners.Aggregates.StandardMapper")
                        .WithMany("Details")
                        .HasForeignKey("StandardMapperId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("YH.Platform.Authorization.Roles.Role", b =>
                {
                    b.HasOne("YH.Platform.UserManagement.Users.User", "CreatorUser")
                        .WithMany()
                        .HasForeignKey("CreatorUserId");

                    b.HasOne("YH.Platform.UserManagement.Users.User", "DeleterUser")
                        .WithMany()
                        .HasForeignKey("DeleterUserId");

                    b.HasOne("YH.Platform.UserManagement.Users.User", "LastModifierUser")
                        .WithMany()
                        .HasForeignKey("LastModifierUserId");
                });

            modelBuilder.Entity("YH.Platform.CustomDictionaries.Aggregates.DicDetail", b =>
                {
                    b.HasOne("YH.Platform.CustomDictionaries.Aggregates.Dic")
                        .WithMany("Details")
                        .HasForeignKey("DicId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("YH.Platform.MultiTenancy.Payments.SubscriptionPayment", b =>
                {
                    b.HasOne("Abp.Application.Editions.Edition", "Edition")
                        .WithMany()
                        .HasForeignKey("EditionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("YH.Platform.MultiTenancy.Tenant", b =>
                {
                    b.HasOne("YH.Platform.UserManagement.Users.User", "CreatorUser")
                        .WithMany()
                        .HasForeignKey("CreatorUserId");

                    b.HasOne("YH.Platform.UserManagement.Users.User", "DeleterUser")
                        .WithMany()
                        .HasForeignKey("DeleterUserId");

                    b.HasOne("Abp.Application.Editions.Edition", "Edition")
                        .WithMany()
                        .HasForeignKey("EditionId");

                    b.HasOne("YH.Platform.UserManagement.Users.User", "LastModifierUser")
                        .WithMany()
                        .HasForeignKey("LastModifierUserId");
                });

            modelBuilder.Entity("YH.Platform.Sequences.Aggregates.SequenceSetting", b =>
                {
                    b.HasOne("YH.Platform.Sequences.Aggregates.Sequence")
                        .WithMany("Settings")
                        .HasForeignKey("SequenceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("YH.Platform.UserManagement.Users.User", b =>
                {
                    b.HasOne("YH.Platform.UserManagement.Users.User", "CreatorUser")
                        .WithMany()
                        .HasForeignKey("CreatorUserId");

                    b.HasOne("YH.Platform.UserManagement.Users.User", "DeleterUser")
                        .WithMany()
                        .HasForeignKey("DeleterUserId");

                    b.HasOne("YH.Platform.UserManagement.Users.User", "LastModifierUser")
                        .WithMany()
                        .HasForeignKey("LastModifierUserId");
                });

            modelBuilder.Entity("Abp.Application.Features.EditionFeatureSetting", b =>
                {
                    b.HasOne("Abp.Application.Editions.Edition", "Edition")
                        .WithMany()
                        .HasForeignKey("EditionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Abp.Authorization.Roles.RolePermissionSetting", b =>
                {
                    b.HasOne("YH.Platform.Authorization.Roles.Role")
                        .WithMany("Permissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserPermissionSetting", b =>
                {
                    b.HasOne("YH.Platform.UserManagement.Users.User")
                        .WithMany("Permissions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
